log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- dpois(trees$num_plots, mean(trees$num_plots))
plot(log(y)~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
y <- dpois(numb_trees, mean(numb_trees))
x <- seq(0,11,by = 1)
y <- dpois(numb_trees, mean(numb_trees))
plot(log(y)~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
x <- seq(0,11,length.out = 1002)
y <- dpois(numb_trees, mean(numb_trees))
plot(log(y)~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
plot(x~log(y), type = 'l')
plot(log(y)~x, type = 'l')
x <- seq(0,11,length.out = 1002)
y <- dpois(numb_trees, mean(numb_trees))
plot(log(y)~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
x <- seq(0,11,by=1)
y <- dpois(numb_trees, mean(numb_trees))
plot(log(y)~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
y <- dpois(trees$num_trees, mean(numb_trees))
plot(log(y)~x, type = 'l')
x <- seq(0,11,by=1)
y <- dpois(trees$num_trees, mean(numb_trees))
plot(log(y)~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by=1)
y <- dpois(trees$num_trees, mean(numb_trees))
plot(log(y)~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
trees$num_trees
plot(log(y)~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
mean(y)
var(y)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by=1)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,5,length.out = 11)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
x <- seq(0,5,length.out = 12)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,5,length.out = 12)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,6,length.out = 12)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,10,length.out = 12)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
y <- log(dpois(trees$num_trees, mean(trees$num_trees)))
x <- seq(0,11,length.out = 12)
y <- log(dpois(trees$num_trees, mean(trees$num_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- log(dpois(trees$num_trees, mean(trees$num_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- log(dpois(trees$num_trees, mean(trees$num_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- log(dpois(trees$num_trees, mean(trees$num_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
trees <- tbl_df(data.frame('num_trees' = c(0:11), 'num_plots' = c(74,149,228,181,169,84,49,24,19,12,9,4)))
ggplot(trees, aes(num_trees, num_plots))+
geom_point()+
xlab('Number of Trees in a Plot')+
ylab('Number of Plots with X trees')+
ggtitle('Distribution of Plots with X number of Trees')+
theme_gray()
numb_trees <- rep(trees$num_trees, trees$num_plots)
length(numb_trees)
mean(numb_trees)
var(numb_trees)
x <- seq(0,11,length.out = 12)
y <- log(dpois(trees$num_trees, mean(trees$num_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- (dpois(trees$num_trees, mean(trees$num_trees), log = T))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- dpois(trees$num_trees, mean(trees$num_trees), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- dpois(trees$num_trees, mean(trees$num_trees), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- dpois(trees$num_trees, mean(trees$num_trees), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by=1)
y <- dpois(trees$num_trees, mean(trees$num_trees), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by=1)
y <- dpois(trees$num_trees, mean(trees$num_trees), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- dpois(trees$num_plots, mean(trees$num_plots), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- dpois(trees$num_plots, mean(trees$num_trees), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- dpois(trees$num_trees, mean(trees$num_trees), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
y <- dpois(trees$num_trees, mean(numb_trees), log = T)
x <- seq(0,11,by = 1)
y <- dpois(trees$num_trees, mean(numb_trees), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- log(dpois(trees$num_trees, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- log(dpois(trees$num_plots, mean(numb_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- log(dpois(trees$num_plots, mean(trees$num_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- log(dpois(trees$num_plots, mean(trees$num_trees)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
y <- log(dpois(trees$num_plots, mean(trees$num_plots)))
x <- seq(0,11,by = 1)
y <- log(dpois(trees$num_plots, mean(trees$num_plots)))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- dpois(trees$num_trees, mean(numb_trees))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,by = 1)
y <- dpois(trees$num_trees, mean(numb_trees))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- dpois(trees$num_trees, mean(numb_trees))
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
x <- seq(0,11,length.out = 12)
y <- dpois(trees$num_trees, mean(numb_trees), log = T)
plot(y~x, type = 'l')
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
subset(log_like, ln_y == max(ln_y))
subset(log_like, ln_y>=max(ln_y)-1.92)
abline(v = 6)
abline(v = 0)
abline(v = 0, col = 'red')
abline(v = 6, col = 'red')
abline(v = 0, col = 'red')
abline(v = max(CI), col = 'red')
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
CI
max(CI)
abline(v = max(CI), col = 'red')
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
abline(v = max(CI), col = 'red')
abline(v = min(CI), col = 'red')
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI), max(CI)), aes(color = 'red'))
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI), max(CI)), aes(color = 'red'))
CI
min(CI)
max(CI)
CI
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), aes(color = 'red'))
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), aes(color = 'red'))+
theme_classic()
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), aes(color = 'red'))+
theme_minimal()
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), aes(color = 'red'))+
theme_update()
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), aes(color = 'red'))
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x), color = 'red'))
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red'))
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red')
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda') +
geom_point(trees, aes(num_trees, num_plots))
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda') +
geom_point(aes(num_trees, num_plots), data = trees)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')
subset(log_like, ln_y == max(ln_y))
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')
mean(total_trees)
total_trees <- rep(trees$num_trees, trees$num_plots)
length(total_trees)
mean(total_trees)
var(total_trees)
var(total_trees)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_segment(c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_segment(c(min(CI$x), max(CI$x)), aes(color = 'red')) +
xlab('Lambda')+
ylab('Log likelihood of lambda')
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(c(min(CI$x), max(CI$x)), aes(color = 'red')) +
xlab('Lambda')+
ylab('Log likelihood of lambda')
length(total_trees)
x <- seq(0,11,length.out = 12)
y <- dpois(total_trees, mean(total_trees), log = T)
# log likelihood function
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
# confidence interval
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')+
ggtitle('Maximum Likelihood Estimation of Lambda')
x <- seq(0,11,length.out = 12)
y <- dpois(total_trees, mean(total_trees), log = T)
# log likelihood function
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
# confidence interval
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')+
ggtitle('Maximum Likelihood Estimation of Lambda')
x <- seq(0,11,length.out = 12)
y <- dpois(total_trees, mean(total_trees), log = T)
# log likelihood function
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
# confidence interval
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')+
ggtitle('Maximum Likelihood Estimation of Lambda')
x <- seq(0,11,length.out = 12)
y <- dpois(total_trees, mean(total_trees), log = T)
# log likelihood function
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
# confidence interval
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')+
ggtitle('Maximum Likelihood Estimation of Lambda')
x <- seq(0,11,length.out = 12)
y <- dpois(total_trees, mean(total_trees), log = T)
# log likelihood function
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
# confidence interval
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')+
ggtitle('Maximum Likelihood Estimation of Lambda')
trees <- tbl_df(data.frame('num_trees' = c(0:11), 'num_plots' = c(74,149,228,181,169,84,49,24,19,12,9,4)))
ggplot(trees, aes(num_trees, num_plots))+
geom_point()+
xlab('Number of Trees in a Plot')+
ylab('Number of Plots with X trees')+
ggtitle('Distribution of Plots with X number of Trees')+
theme_gray()
x <- seq(0,11,length.out = 12)
y <- dpois(trees$num_trees, mean(total_trees), log = T)
# log likelihood function
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
# confidence interval
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')+
ggtitle('Maximum Likelihood Estimation of Lambda')
x <- seq(0,11,length.out = 12)
y <- dpois(trees$num_trees, mean(total_trees), log = T)
# log likelihood function
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
# confidence interval
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')+
ggtitle('Maximum Likelihood Estimation of Lambda')
x <- seq(0,11,length.out = 12)
y <- dpois(trees$num_trees, mean(total_trees), log = T)
log_like <- data.frame("x" = x, "ln_y" = y)
subset(log_like, ln_y == max(ln_y))
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')+
ggtitle('Maximum Likelihood Estimation of Lambda')
# determine the total number of trees by unpacking these data
total_trees <- rep(trees$num_trees, trees$num_plots)
# calculate the mean and variance
mean(total_trees)
var(total_trees)
trees <- tbl_df(data.frame('num_trees' = c(0:11), 'num_plots' = c(74,149,228,181,169,84,49,24,19,12,9,4)))
ggplot(trees, aes(num_trees, num_plots))+
geom_point()+
xlab('Number of Trees in a Plot')+
ylab('Number of Plots with X trees')+
ggtitle('Distribution of Plots with X number of Trees')+
theme_gray()
# determine the total number of trees by unpacking these data
total_trees <- rep(trees$num_trees, trees$num_plots)
# calculate the mean and variance
mean(total_trees)
var(total_trees)
x <- seq(0,11,length.out = 12)
y <- dpois(trees$num_trees, mean(total_trees), log = T)
# log likelihood function
log_like <- data.frame("x" = x, "ln_y" = y)
# maximum likelihood estimate
subset(log_like, ln_y == max(ln_y))
# confidence interval
CI <- subset(log_like, ln_y>=max(ln_y)-1.92)
ggplot(log_like, aes(x, ln_y))+
geom_line()+
geom_vline(xintercept = c(min(CI$x), max(CI$x)), color = 'red') +
xlab('Lambda')+
ylab('Log likelihood of lambda')+
ggtitle('Maximum Likelihood Estimation of Lambda')
